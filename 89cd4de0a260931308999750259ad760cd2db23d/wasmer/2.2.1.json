{
    "runtime": {
        "name": "wasmer",
        "version": "2.2.1"
    },
    "results": [
        {
            "path": "libstd/fs_metadata-file.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_file_create.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdin-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-none.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_vars-none.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/main.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_rename-file.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::rename(old_path, new_path).is_ok()', fs_rename-file.rs:7:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_rename-file.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_rename-file.wasm[162]:0x62c0)\n           at rust_panic (fs_rename-file.wasm[155]:0x5edf)\n           at std::panicking::rust_panic_with_hook::h7811fbe84dbe0b81 (fs_rename-file.wasm[154]:0x5e5c)\n           at std::panicking::begin_panic_handler::{{closure}}::hb3057833ba946b83 (fs_rename-file.wasm[142]:0x50af)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::ha1f5dea80924017c (fs_rename-file.wasm[141]:0x501e)\n           at rust_begin_unwind (fs_rename-file.wasm[149]:0x5787)\n           at core::panicking::panic_fmt::hb03a34d2c425127e (fs_rename-file.wasm[239]:0xbca8)\n           at core::panicking::panic::h7f81addae1203d78 (fs_rename-file.wasm[236]:0xbc3b)\n           at fs_rename_file::main::h03d1770fd4606e58 (fs_rename-file.wasm[21]:0x8ff)\n           at core::ops::function::FnOnce::call_once::hdb8cfe0fa106176e (fs_rename-file.wasm[37]:0xc90)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::hc6574af7054bba81 (fs_rename-file.wasm[24]:0x93d)\n           at std::rt::lang_start::{{closure}}::h7da179a6a075b5e9 (fs_rename-file.wasm[34]:0xbab)\n           at std::rt::lang_start_internal::h6d73a821fe93d99b (fs_rename-file.wasm[106]:0x2d0f)\n           at std::rt::lang_start::he035cc36ed86338f (fs_rename-file.wasm[33]:0xb71)\n           at __original_main (fs_rename-file.wasm[22]:0x91d)\n           at _start (fs_rename-file.wasm[8]:0x3a6)\n           at _start.command_export (fs_rename-file.wasm[290]:0xe9b5)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libstd/env_vars-many.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_vars-some.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_metadata-directory.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-1.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdout-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_create_dir-new-directory.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_create_dir-existing-directory.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::create_dir(\\\"fs_create_dir-existing-directory.dir/existing_directory\\\").is_err()', fs_create_dir-existing-directory.rs:4:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_create_dir-existing-directory.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_create_dir-existing-directory.wasm[178]:0x7b63)\n           at rust_panic (fs_create_dir-existing-directory.wasm[172]:0x7992)\n           at std::panicking::rust_panic_with_hook::h7811fbe84dbe0b81 (fs_create_dir-existing-directory.wasm[171]:0x790f)\n           at std::panicking::begin_panic_handler::{{closure}}::hb3057833ba946b83 (fs_create_dir-existing-directory.wasm[158]:0x6b5d)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::ha1f5dea80924017c (fs_create_dir-existing-directory.wasm[157]:0x6acc)\n           at rust_begin_unwind (fs_create_dir-existing-directory.wasm[166]:0x723a)\n           at core::panicking::panic_fmt::hb03a34d2c425127e (fs_create_dir-existing-directory.wasm[256]:0xd619)\n           at core::panicking::panic::h7f81addae1203d78 (fs_create_dir-existing-directory.wasm[253]:0xd5ac)\n           at fs_create_dir_existing_directory::main::h39cb5d174961605e (fs_create_dir-existing-directory.wasm[28]:0xaa5)\n           at core::ops::function::FnOnce::call_once::h7d5333242df777a7 (fs_create_dir-existing-directory.wasm[41]:0xe0c)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::h7f7eca556ad43770 (fs_create_dir-existing-directory.wasm[24]:0x936)\n           at std::rt::lang_start::{{closure}}::h23627f1a116c68dd (fs_create_dir-existing-directory.wasm[36]:0xc0c)\n           at std::rt::lang_start_internal::h6d73a821fe93d99b (fs_create_dir-existing-directory.wasm[112]:0x2ec1)\n           at std::rt::lang_start::h2aad5a3720ce4c37 (fs_create_dir-existing-directory.wasm[35]:0xbd2)\n           at __original_main (fs_create_dir-existing-directory.wasm[29]:0xac3)\n           at _start (fs_create_dir-existing-directory.wasm[9]:0x3ee)\n           at _start.command_export (fs_create_dir-existing-directory.wasm[307]:0x10326)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libstd/io_stderr-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-0.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_rename-directory.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::rename(old_path, new_path).is_ok()', fs_rename-directory.rs:7:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_rename-directory.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_rename-directory.wasm[162]:0x62c0)\n           at rust_panic (fs_rename-directory.wasm[155]:0x5edf)\n           at std::panicking::rust_panic_with_hook::h7811fbe84dbe0b81 (fs_rename-directory.wasm[154]:0x5e5c)\n           at std::panicking::begin_panic_handler::{{closure}}::hb3057833ba946b83 (fs_rename-directory.wasm[142]:0x50af)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::ha1f5dea80924017c (fs_rename-directory.wasm[141]:0x501e)\n           at rust_begin_unwind (fs_rename-directory.wasm[149]:0x5787)\n           at core::panicking::panic_fmt::hb03a34d2c425127e (fs_rename-directory.wasm[239]:0xbca8)\n           at core::panicking::panic::h7f81addae1203d78 (fs_rename-directory.wasm[236]:0xbc3b)\n           at fs_rename_directory::main::hfca1337c95f8e70f (fs_rename-directory.wasm[22]:0x911)\n           at core::ops::function::FnOnce::call_once::h0fa126a6979ef3d6 (fs_rename-directory.wasm[37]:0xc90)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::hc187550ff45dc6a1 (fs_rename-directory.wasm[21]:0x825)\n           at std::rt::lang_start::{{closure}}::h7387186a2f15af42 (fs_rename-directory.wasm[34]:0xbab)\n           at std::rt::lang_start_internal::h6d73a821fe93d99b (fs_rename-directory.wasm[106]:0x2d0f)\n           at std::rt::lang_start::hff8340cb67336f0b (fs_rename-directory.wasm[33]:0xb71)\n           at __original_main (fs_rename-directory.wasm[23]:0x92f)\n           at _start (fs_rename-directory.wasm[8]:0x3a6)\n           at _start.command_export (fs_rename-directory.wasm[290]:0xe9b5)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libstd/io_stdin-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stderr-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-many.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-some.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-120.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdout-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stderr.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/clock_get_res-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/clock_get_res-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/proc_exit-success.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/start.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stdout.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stdin.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/proc_exit-failure.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/sched_yield.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/getentropy.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/getenv-absent.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/exit-failure.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/clock_gettime-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/clock_gettime-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/assert-true.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/main.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/fopen-parent-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: file == NULL (fopen-parent-directory.c: main: 7)\nerror: failed to run `fopen-parent-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-parent-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-parent-directory.wasm[17]:0x428)\n           at __original_main (fopen-parent-directory.wasm[12]:0x333)\n           at _start (fopen-parent-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/stdout-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/abort.wasm",
            "status": "FAIL",
            "message": "--- abort.status\t2022-06-04 00:19:44.365823125 +0000\n+++ /tmp/tmp.Witby4VYx1/status\t2022-06-04 00:19:50.853904477 +0000\n@@ -1 +1 @@\n-134\n+1\n"
        },
        {
            "path": "libc/stderr-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/ftruncate.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/clock_getres-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/fopen-working-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: errno == ENOTCAPABLE (fopen-working-directory.c: main: 8)\nerror: failed to run `fopen-working-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-working-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-working-directory.wasm[17]:0x428)\n           at __original_main (fopen-working-directory.wasm[12]:0x393)\n           at _start (fopen-working-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/getenv-present.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/assert-false.wasm",
            "status": "FAIL",
            "message": "--- assert-false.status\t2022-06-04 00:19:44.365823125 +0000\n+++ /tmp/tmp.xNeEZGQUNb/status\t2022-06-04 00:19:51.145908317 +0000\n@@ -1 +1 @@\n-134\n+1\n"
        },
        {
            "path": "libc/clock_getres-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/fopen-directory-parent-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: errno == ENOTCAPABLE (fopen-directory-parent-directory.c: main: 8)\nerror: failed to run `fopen-directory-parent-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-directory-parent-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-directory-parent-directory.wasm[17]:0x428)\n           at __original_main (fopen-directory-parent-directory.wasm[12]:0x393)\n           at _start (fopen-directory-parent-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/stdin-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/exit-success.wasm",
            "status": "PASS",
            "message": ""
        }
    ]
}