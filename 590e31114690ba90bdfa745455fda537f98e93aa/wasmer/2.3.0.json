{
    "runtime": {
        "name": "wasmer",
        "version": "2.3.0"
    },
    "results": [
        {
            "path": "core/proc_exit-success.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/proc_exit-failure.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stdin.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/clock_get_res-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stdout.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/fd_stat_get-stderr.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/clock_get_res-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/start.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "core/sched_yield.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stderr-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-1.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_create_dir-new-directory.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-120.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/process_exit-0.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_rename-directory.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::rename(old_path, new_path).is_ok()', fs_rename-directory.rs:7:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_rename-directory.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_rename-directory.wasm[166]:0x60af)\n           at rust_panic (fs_rename-directory.wasm[159]:0x5cd8)\n           at std::panicking::rust_panic_with_hook::h34503c79e5f975a0 (fs_rename-directory.wasm[158]:0x5c55)\n           at std::panicking::begin_panic_handler::{{closure}}::h12a46dd1ec9ad9ef (fs_rename-directory.wasm[146]:0x4ecd)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::hbfd28f296b351783 (fs_rename-directory.wasm[145]:0x4e3c)\n           at rust_begin_unwind (fs_rename-directory.wasm[153]:0x55a5)\n           at core::panicking::panic_fmt::h7092b9385b17ba68 (fs_rename-directory.wasm[243]:0xbdc1)\n           at core::panicking::panic::hd987aee4d3a1bda7 (fs_rename-directory.wasm[248]:0xc28f)\n           at fs_rename_directory::main::hd2ab272aeae2b0ae (fs_rename-directory.wasm[22]:0x94e)\n           at core::ops::function::FnOnce::call_once::h92a415eab6bf4faa (fs_rename-directory.wasm[45]:0xe21)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::hbb232b72771c85a7 (fs_rename-directory.wasm[25]:0x98c)\n           at std::rt::lang_start::{{closure}}::hb59e04bc859c9a58 (fs_rename-directory.wasm[42]:0xd3c)\n           at std::rt::lang_start_internal::hdbc1bbe4c1448980 (fs_rename-directory.wasm[113]:0x2da4)\n           at std::rt::lang_start::h010d5a9e5f90bae6 (fs_rename-directory.wasm[41]:0xd02)\n           at __original_main (fs_rename-directory.wasm[23]:0x96c)\n           at _start (fs_rename-directory.wasm[8]:0x3d9)\n           at _start.command_export (fs_rename-directory.wasm[316]:0xfc05)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libstd/fs_create_dir-existing-directory.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::create_dir(\\\"fs_create_dir-existing-directory.dir/existing_directory\\\").is_err()', fs_create_dir-existing-directory.rs:4:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_create_dir-existing-directory.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_create_dir-existing-directory.wasm[182]:0x796e)\n           at rust_panic (fs_create_dir-existing-directory.wasm[176]:0x779d)\n           at std::panicking::rust_panic_with_hook::h34503c79e5f975a0 (fs_create_dir-existing-directory.wasm[175]:0x771a)\n           at std::panicking::begin_panic_handler::{{closure}}::h12a46dd1ec9ad9ef (fs_create_dir-existing-directory.wasm[163]:0x6992)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::hbfd28f296b351783 (fs_create_dir-existing-directory.wasm[162]:0x6901)\n           at rust_begin_unwind (fs_create_dir-existing-directory.wasm[170]:0x706a)\n           at core::panicking::panic_fmt::h7092b9385b17ba68 (fs_create_dir-existing-directory.wasm[260]:0xd74e)\n           at core::panicking::panic::hd987aee4d3a1bda7 (fs_create_dir-existing-directory.wasm[265]:0xdc1c)\n           at fs_create_dir_existing_directory::main::hc5846532225843d2 (fs_create_dir-existing-directory.wasm[34]:0xbf7)\n           at core::ops::function::FnOnce::call_once::hd4f4cef6a146b8e8 (fs_create_dir-existing-directory.wasm[53]:0x10f5)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::h3b35b836bc70ce2c (fs_create_dir-existing-directory.wasm[25]:0x988)\n           at std::rt::lang_start::{{closure}}::h5bd9bc7b075cada7 (fs_create_dir-existing-directory.wasm[44]:0xda0)\n           at std::rt::lang_start_internal::hdbc1bbe4c1448980 (fs_create_dir-existing-directory.wasm[119]:0x2f59)\n           at std::rt::lang_start::h9792bb9609f83486 (fs_create_dir-existing-directory.wasm[43]:0xd66)\n           at __original_main (fs_create_dir-existing-directory.wasm[35]:0xc15)\n           at _start (fs_create_dir-existing-directory.wasm[9]:0x424)\n           at _start.command_export (fs_create_dir-existing-directory.wasm[333]:0x11592)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libstd/io_stdout-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdin-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_file_create.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-some.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stderr-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdout-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_metadata-directory.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_vars-none.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_metadata-file.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/io_stdin-beowulf.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_vars-many.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/main.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_vars-some.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-many.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/env_args-none.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libstd/fs_rename-file.wasm",
            "status": "FAIL",
            "message": "thread 'main' panicked at 'assertion failed: fs::rename(old_path, new_path).is_ok()', fs_rename-file.rs:7:3\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: failed to run `fs_rename-file.wasm`\n│   1: RuntimeError: unreachable\n           at __rust_start_panic (fs_rename-file.wasm[166]:0x60af)\n           at rust_panic (fs_rename-file.wasm[159]:0x5cd8)\n           at std::panicking::rust_panic_with_hook::h34503c79e5f975a0 (fs_rename-file.wasm[158]:0x5c55)\n           at std::panicking::begin_panic_handler::{{closure}}::h12a46dd1ec9ad9ef (fs_rename-file.wasm[146]:0x4ecd)\n           at std::sys_common::backtrace::__rust_end_short_backtrace::hbfd28f296b351783 (fs_rename-file.wasm[145]:0x4e3c)\n           at rust_begin_unwind (fs_rename-file.wasm[153]:0x55a5)\n           at core::panicking::panic_fmt::h7092b9385b17ba68 (fs_rename-file.wasm[243]:0xbdc1)\n           at core::panicking::panic::hd987aee4d3a1bda7 (fs_rename-file.wasm[248]:0xc28f)\n           at fs_rename_file::main::h9a53a396083ddefc (fs_rename-file.wasm[22]:0x94e)\n           at core::ops::function::FnOnce::call_once::hb96bc2fb9d720ed6 (fs_rename-file.wasm[45]:0xe21)\n           at std::sys_common::backtrace::__rust_begin_short_backtrace::he3a74c56efc46fc2 (fs_rename-file.wasm[25]:0x98c)\n           at std::rt::lang_start::{{closure}}::hb9b7ec1aa495c05e (fs_rename-file.wasm[42]:0xd3c)\n           at std::rt::lang_start_internal::hdbc1bbe4c1448980 (fs_rename-file.wasm[113]:0x2da4)\n           at std::rt::lang_start::hd8f28102313317df (fs_rename-file.wasm[41]:0xd02)\n           at __original_main (fs_rename-file.wasm[23]:0x96c)\n           at _start (fs_rename-file.wasm[8]:0x3d9)\n           at _start.command_export (fs_rename-file.wasm[316]:0xfc05)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/fopen-working-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: errno == ENOTCAPABLE (fopen-working-directory.c: main: 8)\nerror: failed to run `fopen-working-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-working-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-working-directory.wasm[17]:0x428)\n           at __original_main (fopen-working-directory.wasm[12]:0x393)\n           at _start (fopen-working-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/clock_gettime-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/assert-false.wasm",
            "status": "FAIL",
            "message": "--- assert-false.status\t2022-11-04 00:25:27.195939615 +0000\n+++ /tmp/tmp.D4ptqlplrB/status\t2022-11-04 00:25:34.380379461 +0000\n@@ -1 +1 @@\n-134\n+1\n"
        },
        {
            "path": "libc/exit-success.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/getentropy.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/ftruncate.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/stderr-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/getenv-present.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/fopen-parent-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: file == NULL (fopen-parent-directory.c: main: 7)\nerror: failed to run `fopen-parent-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-parent-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-parent-directory.wasm[17]:0x428)\n           at __original_main (fopen-parent-directory.wasm[12]:0x333)\n           at _start (fopen-parent-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/stdout-hello.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/clock_gettime-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/getenv-absent.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/exit-failure.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/main.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/assert-true.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/fopen-directory-parent-directory.wasm",
            "status": "FAIL",
            "message": "Assertion failed: errno == ENOTCAPABLE (fopen-directory-parent-directory.c: main: 8)\nerror: failed to run `fopen-directory-parent-directory.wasm`\n│   1: RuntimeError: unreachable\n           at abort (fopen-directory-parent-directory.wasm[16]:0x3d6)\n           at __assert_fail (fopen-directory-parent-directory.wasm[17]:0x428)\n           at __original_main (fopen-directory-parent-directory.wasm[12]:0x393)\n           at _start (fopen-directory-parent-directory.wasm[11]:0x27a)\n╰─▶ 2: unreachable\n"
        },
        {
            "path": "libc/clock_getres-realtime.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/clock_getres-monotonic.wasm",
            "status": "PASS",
            "message": ""
        },
        {
            "path": "libc/abort.wasm",
            "status": "FAIL",
            "message": "--- abort.status\t2022-11-04 00:25:27.195939615 +0000\n+++ /tmp/tmp.ePNv3rWJBQ/status\t2022-11-04 00:25:35.092529011 +0000\n@@ -1 +1 @@\n-134\n+1\n"
        },
        {
            "path": "libc/stdin-hello.wasm",
            "status": "PASS",
            "message": ""
        }
    ]
}